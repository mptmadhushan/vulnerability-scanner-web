import { useState } from "react";
import { Link } from "react-router-dom";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faCircleInfo } from "@fortawesome/free-solid-svg-icons";
import axios from "axios";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

function Home() {
  const [selectedFile, setSelectedFile] = useState(null);
  const [imageUp, setImage] = useState(null);
  const [respo, setRespo] = useState(null);

  const handleFileInputChange = (event) => {
    const file = event.target.files[0];
    if (isValidFileUploaded(file)) {
      setSelectedFile(event.target.files[0]);
      setImage(URL.createObjectURL(event.target.files[0]));
    } else {
      toast.error("Please select .py file", {
        position: "top-right",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "light",
      });
      setSelectedFile(null);
      setImage(null);
    }
  };

  const handleSubmit = () => {
    console.log(selectedFile.name);
    const reader = new FileReader();

    reader.readAsDataURL(selectedFile);

    reader.onload = () => {
      console.log("called: ", reader);
      handleSubmittwo(reader);
      //   const reqData = { name: 'React POST Request Example' };
      //   axios.post('https://reqres.in/invalid-url', reqData)
      //       .then(response => this.setState({ articleId: response.data.id }))
      //       .catch(error => {
      //           this.setState({ errorMessage: error.message });
      //           console.error('There was an error!', error);
      //       });
      //   setBase64IMG(reader.result)
    };
  };
  const handleSubmittwo = (reader) => {
    console.log(reader);
    const err = [
      "Ipsum cupidatat mollit aliquip pariatur non aliquip enim elit fugiat minim ullamco eu.",
      "Elit cupidatat sint aliqua sint consectetur est duis nostrud sit.",
      "Aliquip velit excepteur nostrud reprehenderit.",
    ];
    setRespo(err);
    const reqData = { filename: selectedFile.name, data: reader.result };
    // axios
    //   .post("https://reqres.in/invalid-url", reqData)
    //   .then((response) => setRespo(response))
    //   .catch((error) => {
    //     console.error("There was an error!", error);
    //   });
  };
  const isValidFileUploaded = (file) => {
    console.log("ðŸš€ ~ file: home.jsx:71 ~ isValidFileUploaded ~ file:", file.type.split("/")[1])
    const validExtensions = ["x-python-script"];
    const fileExtension = file.type.split("/")[1];
    return validExtensions.includes(fileExtension);
  };
  const err = [
    "Ipsum cupidatat mollit aliquip pariatur non aliquip enim elit fugiat minim ullamco eu.",
    "Elit cupidatat sint aliqua sint consectetur est duis nostrud sit.",
    "Aliquip velit excepteur nostrud reprehenderit.",
  ];
  const lapsList = err.map((data) => {
    return <p>{data}</p>;
  });
  const apiReq = (reader) => {
    const Response = {
      id: "123",
      filename: "example.jpg",
      url: "https://example.com/images/123",
      answer: "Answer",
      width: 800,
      height: 600,
    };
    setTimeout(() => {
      setRespo(Response);
    }, 2000);
  };

  return (
    <div
      className="main-body-section"
      style={{
        backgroundImage:
          "url(" +
          "https://images.pond5.com/computer-coding-background-footage-090890180_prevstill.jpeg" +
          ")",
        backgroundPosition: "center",
        backgroundSize: "cover",
        backgroundRepeat: "no-repeat",
      }}
    >
      <div className="flex body-cotainer p-6 h-screen justify-center items-center ">
        <div className="body-content-container m-10 justify-center">
          <div className="form-body p-10 mx-auto relative">
            <div className="bg-white/30 shadow-md rounded px-8 pt-6 pb-8 mb-4 w-[80vw] h-[700px] flex flex-col justify-center overflow-clip relative backdrop:blur-2xl text-center border items-center">
              <h2 className="font-bold  text-3xl text-white top-8 absolute mx-auto">
                Vulnerability Scanner
              </h2>

              <h3 className="text-black-600 mt-5 text-xl font-semibold top-14 absolute mx-auto ">
                Error Detection
              </h3>

              <Link
                to="/userguide"
                className="absolute text-white top-2 right-2"
              >
                <FontAwesomeIcon icon={faCircleInfo} /> User Guide
              </Link>
              <div className="form-section mt-5">
                <div className="flex flex-col items-center justify-center ">
                  <label
                    htmlFor="file-input"
                    className="block text-white font-bold mb-2"
                  >
                    Insert the files
                  </label>
                  <div className="relative">
                    <input
                      type="file"
                      id="file-input"
                      className="absolute opacity-0 "
                      onChange={handleFileInputChange}
                    />
                    <button className="bg-gray-400 text-white font-semibold py-2 px-4 rounded cursor-pointer shadow-md">
                      Choose File
                    </button>
                    <span className="ml-3">
                      {selectedFile ? selectedFile.name : ""}
                    </span>
                  </div>
                  <button
                    disabled={!selectedFile}
                    className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-3 cursor-pointer"
                    onClick={apiReq}
                  >
                    Submit
                  </button>
                </div>
              </div>

              <hr className="mt-10 mb-10" />

              <div className="form-section">
                <div className="flex flex-row items-center justify-center">
                  {respo && (
                    <div>
                      <label className="block text-white font-bold mb-2">
                        Errors
                      </label>
                      <p className="block text-white italic mb-2">
                        â€¢ Non aliqua velit labore consectetur cupidatat irure in
                        mollit sunt ex adipisicing quis excepteur.
                      </p>
                      <p className="block text-white italic mb-2">
                        â€¢ Consectetur labore minim quis nulla irure aute duis
                        mollit commodo ullamco nisi.
                      </p>
                      <p className="block text-white italic mb-2">
                        â€¢ Quis pariatur id quis deserunt ipsum elit culpa
                        officia velit fugiat nulla anim ad.
                      </p>
                    </div>
                  )}
                </div>
               
                <Link
                  to="/userguide"
                  className="absolute text-white top-2 right-2"
                >
                  <FontAwesomeIcon icon={faCircleInfo} /> User Guide
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
      <ToastContainer />
    </div>
  );
}

export default Home;
